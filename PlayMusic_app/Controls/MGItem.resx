<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBKwErAAD/7gAOQWRvYmUAZAAAAAAB/+EEFEV4aWYAAE1NACoAAAAIAAcBEgAD
        AAAAAQABAAABGgAFAAAAAQAAAGIBGwAFAAAAAQAAAGoBKAADAAAAAQACAAABMQACAAAAIgAAAHIBMgAC
        AAAAFAAAAJSHaQAEAAAAAQAAAKgAAADIASv//gABAAABK//+AAEAAEFkb2JlIFBob3Rvc2hvcCBDQyAy
        MDE1IChXaW5kb3dzKQAyMDE2OjA1OjEyIDE0OjM0OjI0AAACoAIABAAAAAEAAABUoAMABAAAAAEAAABS
        AAAAAAAAAAYBAwADAAAAAQAGAAABGgAFAAAAAQAAARYBGwAFAAAAAQAAAR4BKAADAAAAAQACAAACAQAE
        AAAAAQAAASYCAgAEAAAAAQAAAuUAAAAAAAAASAAAAAEAAABIAAAAAf/Y/+0ADEFkb2JlX0NNAAH/7gAO
        QWRvYmUAZIAAAAAB/9sAhAAMCAgICQgMCQkMEQsKCxEVDwwMDxUYExMVExMYEQwMDAwMDBEMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMAQ0LCw0ODRAODhAUDg4OFBQODg4OFBEMDAwMDBERDAwMDAwMEQwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAUABQDASIAAhEBAxEB/90ABAAC/8QBPwAAAQUB
        AQEBAQEAAAAAAAAAAwABAgQFBgcICQoLAQABBQEBAQEBAQAAAAAAAAABAAIDBAUGBwgJCgsQAAEEAQMC
        BAIFBwYIBQMMMwEAAhEDBCESMQVBUWETInGBMgYUkaGxQiMkFVLBYjM0coLRQwclklPw4fFjczUWorKD
        JkSTVGRFwqN0NhfSVeJl8rOEw9N14/NGJ5SkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2N0dXZ3eHl6e3
        x9fn9xEAAgIBAgQEAwQFBgcHBgU1AQACEQMhMRIEQVFhcSITBTKBkRShsUIjwVLR8DMkYuFygpJDUxVj
        czTxJQYWorKDByY1wtJEk1SjF2RFVTZ0ZeLys4TD03Xj80aUpIW0lcTU5PSltcXV5fVWZnaGlqa2xtbm
        9ic3R1dnd4eXp7fH/9oADAMBAAIRAxEAPwD0e26rb9py3luMXba2a7SJgWW7fp+p+b/g9iK3GxLGB9Aa
        ydW20w0/5zPa7+17FTzKrb+lMopaX21uZW5ogQWHa6Z/zk3Tej3YzxbZeWnk1VH2n/jN30/81JTb9e/b
        6Gn2nd6e+PbEb/X2/wDF/m/6f9H/AC0lHePt3r/4P+j7u276e7/tz9B/xv6NJJT/AP/Q9Ju/pB+yz9og
        epEbI/N+0bv/AEX+n/62ov8A2jt/Tx6f532ad8d/5z/0V+m/0a+Y0klP1H+p/Y/zfsuz+ztSXy4kkp//
        2QD/4gxYSUNDX1BST0ZJTEUAAQEAAAxITGlubwIQAABtbnRyUkdCIFhZWiAHzgACAAkABgAxAABhY3Nw
        TVNGVAAAAABJRUMgc1JHQgAAAAAAAAAAAAAAAQAA9tYAAQAAAADTLUhQICAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFjcHJ0AAABUAAAADNkZXNjAAABhAAAAGx3dHB0
        AAAB8AAAABRia3B0AAACBAAAABRyWFlaAAACGAAAABRnWFlaAAACLAAAABRiWFlaAAACQAAAABRkbW5k
        AAACVAAAAHBkbWRkAAACxAAAAIh2dWVkAAADTAAAAIZ2aWV3AAAD1AAAACRsdW1pAAAD+AAAABRtZWFz
        AAAEDAAAACR0ZWNoAAAEMAAAAAxyVFJDAAAEPAAACAxnVFJDAAAEPAAACAxiVFJDAAAEPAAACAx0ZXh0
        AAAAAENvcHlyaWdodCAoYykgMTk5OCBIZXdsZXR0LVBhY2thcmQgQ29tcGFueQAAZGVzYwAAAAAAAAAS
        c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAABJzUkdCIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAPNRAAEAAAABFsxYWVog
        AAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAABvogAAOPUAAAOQWFlaIAAAAAAAAGKZAAC3hQAAGNpYWVog
        AAAAAAAAJKAAAA+EAAC2z2Rlc2MAAAAAAAAAFklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAA
        FklFQyBodHRwOi8vd3d3LmllYy5jaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAABkZXNjAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAt
        IHNSR0IAAAAAAAAAAAAAAC5JRUMgNjE5NjYtMi4xIERlZmF1bHQgUkdCIGNvbG91ciBzcGFjZSAtIHNS
        R0IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0
        aW9uIGluIElFQzYxOTY2LTIuMQAAAAAAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp
        biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZpZXcAAAAAABOk/gAUXy4AEM8U
        AAPtzAAEEwsAA1yeAAAAAVhZWiAAAAAAAEwJVgBQAAAAVx/nbWVhcwAAAAAAAAABAAAAAAAAAAAAAAAA
        AAAAAAAAAo8AAAACc2lnIAAAAABDUlQgY3VydgAAAAAAAAQAAAAABQAKAA8AFAAZAB4AIwAoAC0AMgA3
        ADsAQABFAEoATwBUAFkAXgBjAGgAbQByAHcAfACBAIYAiwCQAJUAmgCfAKQAqQCuALIAtwC8AMEAxgDL
        ANAA1QDbAOAA5QDrAPAA9gD7AQEBBwENARMBGQEfASUBKwEyATgBPgFFAUwBUgFZAWABZwFuAXUBfAGD
        AYsBkgGaAaEBqQGxAbkBwQHJAdEB2QHhAekB8gH6AgMCDAIUAh0CJgIvAjgCQQJLAlQCXQJnAnECegKE
        Ao4CmAKiAqwCtgLBAssC1QLgAusC9QMAAwsDFgMhAy0DOANDA08DWgNmA3IDfgOKA5YDogOuA7oDxwPT
        A+AD7AP5BAYEEwQgBC0EOwRIBFUEYwRxBH4EjASaBKgEtgTEBNME4QTwBP4FDQUcBSsFOgVJBVgFZwV3
        BYYFlgWmBbUFxQXVBeUF9gYGBhYGJwY3BkgGWQZqBnsGjAadBq8GwAbRBuMG9QcHBxkHKwc9B08HYQd0
        B4YHmQesB78H0gflB/gICwgfCDIIRghaCG4IggiWCKoIvgjSCOcI+wkQCSUJOglPCWQJeQmPCaQJugnP
        CeUJ+woRCicKPQpUCmoKgQqYCq4KxQrcCvMLCwsiCzkLUQtpC4ALmAuwC8gL4Qv5DBIMKgxDDFwMdQyO
        DKcMwAzZDPMNDQ0mDUANWg10DY4NqQ3DDd4N+A4TDi4OSQ5kDn8Omw62DtIO7g8JDyUPQQ9eD3oPlg+z
        D88P7BAJECYQQxBhEH4QmxC5ENcQ9RETETERTxFtEYwRqhHJEegSBxImEkUSZBKEEqMSwxLjEwMTIxND
        E2MTgxOkE8UT5RQGFCcUSRRqFIsUrRTOFPAVEhU0FVYVeBWbFb0V4BYDFiYWSRZsFo8WshbWFvoXHRdB
        F2UXiReuF9IX9xgbGEAYZRiKGK8Y1Rj6GSAZRRlrGZEZtxndGgQaKhpRGncanhrFGuwbFBs7G2Mbihuy
        G9ocAhwqHFIcexyjHMwc9R0eHUcdcB2ZHcMd7B4WHkAeah6UHr4e6R8THz4faR+UH78f6iAVIEEgbCCY
        IMQg8CEcIUghdSGhIc4h+yInIlUigiKvIt0jCiM4I2YjlCPCI/AkHyRNJHwkqyTaJQklOCVoJZclxyX3
        JicmVyaHJrcm6CcYJ0kneierJ9woDSg/KHEooijUKQYpOClrKZ0p0CoCKjUqaCqbKs8rAis2K2krnSvR
        LAUsOSxuLKIs1y0MLUEtdi2rLeEuFi5MLoIuty7uLyQvWi+RL8cv/jA1MGwwpDDbMRIxSjGCMbox8jIq
        MmMymzLUMw0zRjN/M7gz8TQrNGU0njTYNRM1TTWHNcI1/TY3NnI2rjbpNyQ3YDecN9c4FDhQOIw4yDkF
        OUI5fzm8Ofk6Njp0OrI67zstO2s7qjvoPCc8ZTykPOM9Ij1hPaE94D4gPmA+oD7gPyE/YT+iP+JAI0Bk
        QKZA50EpQWpBrEHuQjBCckK1QvdDOkN9Q8BEA0RHRIpEzkUSRVVFmkXeRiJGZ0arRvBHNUd7R8BIBUhL
        SJFI10kdSWNJqUnwSjdKfUrESwxLU0uaS+JMKkxyTLpNAk1KTZNN3E4lTm5Ot08AT0lPk0/dUCdQcVC7
        UQZRUFGbUeZSMVJ8UsdTE1NfU6pT9lRCVI9U21UoVXVVwlYPVlxWqVb3V0RXklfgWC9YfVjLWRpZaVm4
        WgdaVlqmWvVbRVuVW+VcNVyGXNZdJ114XcleGl5sXr1fD19hX7NgBWBXYKpg/GFPYaJh9WJJYpxi8GND
        Y5dj62RAZJRk6WU9ZZJl52Y9ZpJm6Gc9Z5Nn6Wg/aJZo7GlDaZpp8WpIap9q92tPa6dr/2xXbK9tCG1g
        bbluEm5rbsRvHm94b9FwK3CGcOBxOnGVcfByS3KmcwFzXXO4dBR0cHTMdSh1hXXhdj52m3b4d1Z3s3gR
        eG54zHkqeYl553pGeqV7BHtje8J8IXyBfOF9QX2hfgF+Yn7CfyN/hH/lgEeAqIEKgWuBzYIwgpKC9INX
        g7qEHYSAhOOFR4Wrhg6GcobXhzuHn4gEiGmIzokziZmJ/opkisqLMIuWi/yMY4zKjTGNmI3/jmaOzo82
        j56QBpBukNaRP5GokhGSepLjk02TtpQglIqU9JVflcmWNJaflwqXdZfgmEyYuJkkmZCZ/JpomtWbQpuv
        nByciZz3nWSd0p5Anq6fHZ+Ln/qgaaDYoUehtqImopajBqN2o+akVqTHpTilqaYapoum/adup+CoUqjE
        qTepqaocqo+rAqt1q+msXKzQrUStuK4trqGvFq+LsACwdbDqsWCx1rJLssKzOLOutCW0nLUTtYq2AbZ5
        tvC3aLfguFm40blKucK6O7q1uy67p7whvJu9Fb2Pvgq+hL7/v3q/9cBwwOzBZ8Hjwl/C28NYw9TEUcTO
        xUvFyMZGxsPHQce/yD3IvMk6ybnKOMq3yzbLtsw1zLXNNc21zjbOts83z7jQOdC60TzRvtI/0sHTRNPG
        1EnUy9VO1dHWVdbY11zX4Nhk2OjZbNnx2nba+9uA3AXcit0Q3ZbeHN6i3ynfr+A24L3hROHM4lPi2+Nj
        4+vkc+T85YTmDeaW5x/nqegy6LzpRunQ6lvq5etw6/vshu0R7ZzuKO6070DvzPBY8OXxcvH/8ozzGfOn
        9DT0wvVQ9d72bfb794r4Gfio+Tj5x/pX+uf7d/wH/Jj9Kf26/kv+3P9t////2wBDAAEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQECAgICAgICAgICAgMDAwMDAwMDAwP/2wBDAQEB
        AQEBAQEBAQECAgECAgMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
        AwP/wAARCABSAFQDAREAAhEBAxEB/8QAHwAAAAYCAwEAAAAAAAAAAAAABwgGBQQJAwoCAQAL/8QAtRAA
        AgEDBAEDAwIDAwMCBgl1AQIDBBEFEgYhBxMiAAgxFEEyIxUJUUIWYSQzF1JxgRhikSVDobHwJjRyChnB
        0TUn4VM2gvGSokRUc0VGN0djKFVWVxqywtLi8mSDdJOEZaOzw9PjKThm83UqOTpISUpYWVpnaGlqdnd4
        eXqFhoeIiYqUlZaXmJmapKWmp6ipqrS1tre4ubrExcbHyMnK1NXW19jZ2uTl5ufo6er09fb3+Pn6/8QA
        HwEAAAYDAQEBAAAAAAAAAAAABgUEAwcCCAEJAAoL/8QAtREAAgEDAgQEAwUEBAQGBgVtAQIDEQQhEgUx
        BgAiE0FRBzJhFHEIQoEjkRVSoWIWMwmxJMHRQ3LwF+GCNCWSUxhjRPGisiY1GVQ2RWQnCnODk0Z0wtLi
        8lVldVY3hIWjs8PT4/MpGpSktMTU5PSVpbXF1eX1KEdXZjh2hpamtsbW5vZnd4eXp7fH1+f3SFhoeIiY
        qLjI2Oj4OUlZaXmJmam5ydnp+So6SlpqeoqaqrrK2ur6/90ABAAL/9oADAMBAAIRAxEAPwDf49+69173
        7r3Rau3/AJR9fdU1L7fg+43nvkusEW0tvOss1PVyELDBl69Unhx0kjkAQqk9X6lPh0kH37r3QKwx/NDu
        e1UavE9GbVqfVDTeN6bcMlM36GKmLIbijrEU+oSSYxW+oUce/de6mr8IDmj5t/d29hbrqns00qN4NTnl
        vXmq/ccjjn6mxP1sPp7917rkfgRsekXXguxexMVUrzFOanETLG976tFHjcZIf9g4P+Pv3XusD9E/KLrc
        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
</value>
  </data>
</root>